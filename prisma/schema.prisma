generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Owner {
  id        String        @id @default(cuid())
  fullName  String?
  taxCode   String?       @unique
  address   String?

  emails    OwnerEmail[]
  phones    OwnerPhone[]
  petLinks  PetOwner[]

  @@index([fullName])
}

model OwnerEmail {
  id      String @id @default(cuid())
  ownerId String
  email   String

  owner Owner @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@unique([ownerId, email])
}

model OwnerPhone {
  id      String @id @default(cuid())
  ownerId String
  phone   String

  owner Owner @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@unique([ownerId, phone])
}

model Pet {
  id          String     @id @default(cuid())
  name        String?
  species     String?
  breed       String?
  sex         String?
  dob         DateTime?
  color       String?
  microchip   String?    @unique
  sterilized  Boolean?

  owners      PetOwner[]
  visits      Visit[]

  @@index([name])
}

model PetOwner {
  id        String    @id @default(cuid())
  ownerId   String
  petId     String
  role      String    // 'primary' | 'secondary'
  startDate DateTime?
  endDate   DateTime?

  owner Owner @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  pet   Pet   @relation(fields: [petId], references: [id], onDelete: Cascade)

  @@index([ownerId])
  @@index([petId])
  @@index([role])
}

model Visit {
  id                String    @id @default(cuid())
  petId             String
  visitedAt         DateTime?
  description       String
  examsText         String?
  prescriptionsText String?

  pet Pet @relation(fields: [petId], references: [id], onDelete: Cascade)

  @@index([visitedAt])
}
